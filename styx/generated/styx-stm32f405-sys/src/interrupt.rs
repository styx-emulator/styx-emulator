// BSD 2-Clause License
//
// Copyright (c) 2024, Styx Emulator Project
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#[doc = r"Enumeration of all the interrupts."]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(u16)]
pub enum Interrupt {
    #[doc = "0 - Window Watchdog interrupt"]
    #[cfg(feature = "wwdg")]
    WWDG = 0,
    #[doc = "1 - PVD through EXTI line detection interrupt"]
    #[cfg(feature = "pwr")]
    PVD = 1,
    #[doc = "2 - Tamper and TimeStamp interrupts through the EXTI line"]
    #[cfg(feature = "exti")]
    TAMP_STAMP = 2,
    #[doc = "3 - RTC Wakeup interrupt through the EXTI line"]
    #[cfg(feature = "rtc")]
    RTC_WKUP = 3,
    #[doc = "5 - RCC global interrupt"]
    #[cfg(feature = "rcc")]
    RCC = 5,
    #[doc = "6 - EXTI Line0 interrupt"]
    #[cfg(feature = "exti")]
    EXTI0 = 6,
    #[doc = "7 - EXTI Line1 interrupt"]
    #[cfg(feature = "exti")]
    EXTI1 = 7,
    #[doc = "8 - EXTI Line2 interrupt"]
    #[cfg(feature = "exti")]
    EXTI2 = 8,
    #[doc = "9 - EXTI Line3 interrupt"]
    #[cfg(feature = "exti")]
    EXTI3 = 9,
    #[doc = "10 - EXTI Line4 interrupt"]
    #[cfg(feature = "exti")]
    EXTI4 = 10,
    #[doc = "11 - DMA1 Stream0 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream0 = 11,
    #[doc = "12 - DMA1 Stream1 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream1 = 12,
    #[doc = "13 - DMA1 Stream2 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream2 = 13,
    #[doc = "14 - DMA1 Stream3 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream3 = 14,
    #[doc = "15 - DMA1 Stream4 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream4 = 15,
    #[doc = "16 - DMA1 Stream5 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream5 = 16,
    #[doc = "17 - DMA1 Stream6 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream6 = 17,
    #[doc = "18 - ADC3 global interrupts"]
    #[cfg(feature = "adc3")]
    ADC = 18,
    #[doc = "19 - CAN1 TX interrupts"]
    #[cfg(feature = "can1")]
    CAN1_TX = 19,
    #[doc = "20 - CAN1 RX0 interrupts"]
    #[cfg(feature = "can1")]
    CAN1_RX0 = 20,
    #[doc = "21 - CAN1 RX1 interrupts"]
    #[cfg(feature = "can1")]
    CAN1_RX1 = 21,
    #[doc = "22 - CAN1 SCE interrupt"]
    #[cfg(feature = "can1")]
    CAN1_SCE = 22,
    #[doc = "23 - EXTI Line\\[9:5\\]
interrupts"]
    #[cfg(feature = "exti")]
    EXTI9_5 = 23,
    #[doc = "24 - TIM1 Break interrupt and TIM9 global interrupt"]
    #[cfg(feature = "tim9")]
    TIM1_BRK_TIM9 = 24,
    #[doc = "25 - TIM1 Update interrupt and TIM10 global interrupt"]
    #[cfg(feature = "tim10")]
    TIM1_UP_TIM10 = 25,
    #[doc = "26 - TIM1 Trigger and Commutation interrupts and TIM11 global interrupt"]
    #[cfg(feature = "tim11")]
    TIM1_TRG_COM_TIM11 = 26,
    #[doc = "27 - TIM1 Capture Compare interrupt"]
    #[cfg(feature = "tim1")]
    TIM1_CC = 27,
    #[doc = "28 - TIM2 global interrupt"]
    #[cfg(feature = "tim2")]
    TIM2 = 28,
    #[doc = "29 - TIM3 global interrupt"]
    #[cfg(feature = "tim3")]
    TIM3 = 29,
    #[doc = "30 - TIM4 global interrupt"]
    #[cfg(feature = "tim4")]
    TIM4 = 30,
    #[doc = "31 - I2C1 event interrupt"]
    #[cfg(feature = "i2c1")]
    I2C1_EV = 31,
    #[doc = "32 - I2C1 error interrupt"]
    #[cfg(feature = "i2c1")]
    I2C1_ER = 32,
    #[doc = "33 - I2C2 event interrupt"]
    #[cfg(feature = "i2c2")]
    I2C2_EV = 33,
    #[doc = "34 - I2C2 error interrupt"]
    #[cfg(feature = "i2c2")]
    I2C2_ER = 34,
    #[doc = "35 - SPI1 global interrupt"]
    #[cfg(feature = "spi5")]
    SPI1 = 35,
    #[doc = "36 - SPI2 global interrupt"]
    #[cfg(feature = "spi2")]
    SPI2 = 36,
    #[doc = "37 - USART1 global interrupt"]
    #[cfg(feature = "usart1")]
    USART1 = 37,
    #[doc = "38 - USART2 global interrupt"]
    #[cfg(feature = "usart2")]
    USART2 = 38,
    #[doc = "39 - USART3 global interrupt"]
    #[cfg(feature = "usart3")]
    USART3 = 39,
    #[doc = "40 - EXTI Line\\[15:10\\]
interrupts"]
    #[cfg(feature = "exti")]
    EXTI15_10 = 40,
    #[doc = "41 - RTC Alarms (A and B) through EXTI line interrupt"]
    #[cfg(feature = "rtc")]
    RTC_Alarm = 41,
    #[doc = "42 - USB On-The-Go FS Wakeup through EXTI line interrupt"]
    #[cfg(feature = "otg_fs_global")]
    OTG_FS_WKUP = 42,
    #[doc = "43 - TIM8 Break interrupt and TIM12 global interrupt"]
    #[cfg(feature = "tim12")]
    TIM8_BRK_TIM12 = 43,
    #[doc = "44 - TIM8 Update interrupt and TIM13 global interrupt"]
    #[cfg(feature = "tim13")]
    TIM8_UP_TIM13 = 44,
    #[doc = "45 - TIM8 Trigger and Commutation interrupts and TIM14 global interrupt"]
    #[cfg(feature = "tim14")]
    TIM8_TRG_COM_TIM14 = 45,
    #[doc = "46 - TIM8 Capture Compare interrupt"]
    #[cfg(feature = "tim8")]
    TIM8_CC = 46,
    #[doc = "47 - DMA1 Stream7 global interrupt"]
    #[cfg(feature = "dma1")]
    DMA1_Stream7 = 47,
    #[doc = "48 - FSMC global interrupt"]
    #[cfg(feature = "fsmc")]
    FSMC = 48,
    #[doc = "49 - SDIO global interrupt"]
    #[cfg(feature = "sdio")]
    SDIO = 49,
    #[doc = "50 - TIM5 global interrupt"]
    #[cfg(feature = "tim5")]
    TIM5 = 50,
    #[doc = "51 - SPI3 global interrupt"]
    #[cfg(feature = "spi6")]
    SPI3 = 51,
    #[doc = "52 - UART4 global interrupt"]
    #[cfg(feature = "uart7")]
    UART4 = 52,
    #[doc = "53 - UART5 global interrupt"]
    #[cfg(feature = "uart8")]
    UART5 = 53,
    #[doc = "54 - TIM6 global interrupt, DAC1 and DAC2 underrun error interrupt"]
    #[cfg(feature = "tim6")]
    TIM6_DAC = 54,
    #[doc = "55 - TIM7 global interrupt"]
    #[cfg(feature = "tim7")]
    TIM7 = 55,
    #[doc = "56 - DMA2 Stream0 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream0 = 56,
    #[doc = "57 - DMA2 Stream1 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream1 = 57,
    #[doc = "58 - DMA2 Stream2 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream2 = 58,
    #[doc = "59 - DMA2 Stream3 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream3 = 59,
    #[doc = "60 - DMA2 Stream4 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream4 = 60,
    #[doc = "61 - Ethernet global interrupt"]
    #[cfg(feature = "ethernet_mac")]
    ETH = 61,
    #[doc = "62 - Ethernet Wakeup through EXTI line interrupt"]
    #[cfg(feature = "ethernet_mac")]
    ETH_WKUP = 62,
    #[doc = "63 - CAN2 TX interrupts"]
    #[cfg(feature = "can2")]
    CAN2_TX = 63,
    #[doc = "64 - CAN2 RX0 interrupts"]
    #[cfg(feature = "can2")]
    CAN2_RX0 = 64,
    #[doc = "65 - CAN2 RX1 interrupts"]
    #[cfg(feature = "can2")]
    CAN2_RX1 = 65,
    #[doc = "66 - CAN2 SCE interrupt"]
    #[cfg(feature = "can2")]
    CAN2_SCE = 66,
    #[doc = "67 - USB On The Go FS global interrupt"]
    #[cfg(feature = "otg_fs_global")]
    OTG_FS = 67,
    #[doc = "68 - DMA2 Stream5 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream5 = 68,
    #[doc = "69 - DMA2 Stream6 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream6 = 69,
    #[doc = "70 - DMA2 Stream7 global interrupt"]
    #[cfg(feature = "dma2")]
    DMA2_Stream7 = 70,
    #[doc = "71 - USART6 global interrupt"]
    #[cfg(feature = "usart6")]
    USART6 = 71,
    #[doc = "72 - I2C3 event interrupt"]
    #[cfg(feature = "i2c3")]
    I2C3_EV = 72,
    #[doc = "73 - I2C3 error interrupt"]
    #[cfg(feature = "i2c3")]
    I2C3_ER = 73,
    #[doc = "74 - USB On The Go HS End Point 1 Out global interrupt"]
    #[cfg(feature = "otg_hs_global")]
    OTG_HS_EP1_OUT = 74,
    #[doc = "75 - USB On The Go HS End Point 1 In global interrupt"]
    #[cfg(feature = "otg_hs_global")]
    OTG_HS_EP1_IN = 75,
    #[doc = "76 - USB On The Go HS Wakeup through EXTI interrupt"]
    #[cfg(feature = "otg_hs_global")]
    OTG_HS_WKUP = 76,
    #[doc = "77 - USB On The Go HS global interrupt"]
    #[cfg(feature = "otg_hs_global")]
    OTG_HS = 77,
    #[doc = "78 - DCMI global interrupt"]
    #[cfg(feature = "dcmi")]
    DCMI = 78,
    #[doc = "79 - CRYP crypto global interrupt"]
    #[cfg(feature = "cryp")]
    CRYP = 79,
    #[doc = "80 - Hash and Rng global interrupt"]
    #[cfg(feature = "hash")]
    HASH_RNG = 80,
    #[doc = "81 - Floating point interrupt"]
    #[cfg(feature = "fpu")]
    FPU = 81,
    #[doc = "88 - LTDC global interrupt"]
    #[cfg(feature = "ltdc")]
    LCD_TFT = 88,
    #[doc = "89 - LTDC global error interrupt"]
    #[cfg(feature = "ltdc")]
    LCD_TFT_1 = 89,
}
#[doc = r" TryFromInterruptError"]
#[derive(Debug, Copy, Clone)]
pub struct TryFromInterruptError(());
impl Interrupt {
    #[doc = r" Attempt to convert a given value into an `Interrupt`"]
    #[inline]
    pub fn try_from(value: u8) -> Result<Self, TryFromInterruptError> {
        match value {
            #[cfg(feature = "wwdg")]
            0 => Ok(Interrupt::WWDG),
            #[cfg(feature = "pwr")]
            1 => Ok(Interrupt::PVD),
            #[cfg(feature = "exti")]
            2 => Ok(Interrupt::TAMP_STAMP),
            #[cfg(feature = "rtc")]
            3 => Ok(Interrupt::RTC_WKUP),
            #[cfg(feature = "rcc")]
            5 => Ok(Interrupt::RCC),
            #[cfg(feature = "exti")]
            6 => Ok(Interrupt::EXTI0),
            #[cfg(feature = "exti")]
            7 => Ok(Interrupt::EXTI1),
            #[cfg(feature = "exti")]
            8 => Ok(Interrupt::EXTI2),
            #[cfg(feature = "exti")]
            9 => Ok(Interrupt::EXTI3),
            #[cfg(feature = "exti")]
            10 => Ok(Interrupt::EXTI4),
            #[cfg(feature = "dma1")]
            11 => Ok(Interrupt::DMA1_Stream0),
            #[cfg(feature = "dma1")]
            12 => Ok(Interrupt::DMA1_Stream1),
            #[cfg(feature = "dma1")]
            13 => Ok(Interrupt::DMA1_Stream2),
            #[cfg(feature = "dma1")]
            14 => Ok(Interrupt::DMA1_Stream3),
            #[cfg(feature = "dma1")]
            15 => Ok(Interrupt::DMA1_Stream4),
            #[cfg(feature = "dma1")]
            16 => Ok(Interrupt::DMA1_Stream5),
            #[cfg(feature = "dma1")]
            17 => Ok(Interrupt::DMA1_Stream6),
            #[cfg(feature = "adc3")]
            18 => Ok(Interrupt::ADC),
            #[cfg(feature = "can1")]
            19 => Ok(Interrupt::CAN1_TX),
            #[cfg(feature = "can1")]
            20 => Ok(Interrupt::CAN1_RX0),
            #[cfg(feature = "can1")]
            21 => Ok(Interrupt::CAN1_RX1),
            #[cfg(feature = "can1")]
            22 => Ok(Interrupt::CAN1_SCE),
            #[cfg(feature = "exti")]
            23 => Ok(Interrupt::EXTI9_5),
            #[cfg(feature = "tim9")]
            24 => Ok(Interrupt::TIM1_BRK_TIM9),
            #[cfg(feature = "tim10")]
            25 => Ok(Interrupt::TIM1_UP_TIM10),
            #[cfg(feature = "tim11")]
            26 => Ok(Interrupt::TIM1_TRG_COM_TIM11),
            #[cfg(feature = "tim1")]
            27 => Ok(Interrupt::TIM1_CC),
            #[cfg(feature = "tim2")]
            28 => Ok(Interrupt::TIM2),
            #[cfg(feature = "tim3")]
            29 => Ok(Interrupt::TIM3),
            #[cfg(feature = "tim4")]
            30 => Ok(Interrupt::TIM4),
            #[cfg(feature = "i2c1")]
            31 => Ok(Interrupt::I2C1_EV),
            #[cfg(feature = "i2c1")]
            32 => Ok(Interrupt::I2C1_ER),
            #[cfg(feature = "i2c2")]
            33 => Ok(Interrupt::I2C2_EV),
            #[cfg(feature = "i2c2")]
            34 => Ok(Interrupt::I2C2_ER),
            #[cfg(feature = "spi5")]
            35 => Ok(Interrupt::SPI1),
            #[cfg(feature = "spi2")]
            36 => Ok(Interrupt::SPI2),
            #[cfg(feature = "usart1")]
            37 => Ok(Interrupt::USART1),
            #[cfg(feature = "usart2")]
            38 => Ok(Interrupt::USART2),
            #[cfg(feature = "usart3")]
            39 => Ok(Interrupt::USART3),
            #[cfg(feature = "exti")]
            40 => Ok(Interrupt::EXTI15_10),
            #[cfg(feature = "rtc")]
            41 => Ok(Interrupt::RTC_Alarm),
            #[cfg(feature = "otg_fs_global")]
            42 => Ok(Interrupt::OTG_FS_WKUP),
            #[cfg(feature = "tim12")]
            43 => Ok(Interrupt::TIM8_BRK_TIM12),
            #[cfg(feature = "tim13")]
            44 => Ok(Interrupt::TIM8_UP_TIM13),
            #[cfg(feature = "tim14")]
            45 => Ok(Interrupt::TIM8_TRG_COM_TIM14),
            #[cfg(feature = "tim8")]
            46 => Ok(Interrupt::TIM8_CC),
            #[cfg(feature = "dma1")]
            47 => Ok(Interrupt::DMA1_Stream7),
            #[cfg(feature = "fsmc")]
            48 => Ok(Interrupt::FSMC),
            #[cfg(feature = "sdio")]
            49 => Ok(Interrupt::SDIO),
            #[cfg(feature = "tim5")]
            50 => Ok(Interrupt::TIM5),
            #[cfg(feature = "spi6")]
            51 => Ok(Interrupt::SPI3),
            #[cfg(feature = "uart7")]
            52 => Ok(Interrupt::UART4),
            #[cfg(feature = "uart8")]
            53 => Ok(Interrupt::UART5),
            #[cfg(feature = "tim6")]
            54 => Ok(Interrupt::TIM6_DAC),
            #[cfg(feature = "tim7")]
            55 => Ok(Interrupt::TIM7),
            #[cfg(feature = "dma2")]
            56 => Ok(Interrupt::DMA2_Stream0),
            #[cfg(feature = "dma2")]
            57 => Ok(Interrupt::DMA2_Stream1),
            #[cfg(feature = "dma2")]
            58 => Ok(Interrupt::DMA2_Stream2),
            #[cfg(feature = "dma2")]
            59 => Ok(Interrupt::DMA2_Stream3),
            #[cfg(feature = "dma2")]
            60 => Ok(Interrupt::DMA2_Stream4),
            #[cfg(feature = "ethernet_mac")]
            61 => Ok(Interrupt::ETH),
            #[cfg(feature = "ethernet_mac")]
            62 => Ok(Interrupt::ETH_WKUP),
            #[cfg(feature = "can2")]
            63 => Ok(Interrupt::CAN2_TX),
            #[cfg(feature = "can2")]
            64 => Ok(Interrupt::CAN2_RX0),
            #[cfg(feature = "can2")]
            65 => Ok(Interrupt::CAN2_RX1),
            #[cfg(feature = "can2")]
            66 => Ok(Interrupt::CAN2_SCE),
            #[cfg(feature = "otg_fs_global")]
            67 => Ok(Interrupt::OTG_FS),
            #[cfg(feature = "dma2")]
            68 => Ok(Interrupt::DMA2_Stream5),
            #[cfg(feature = "dma2")]
            69 => Ok(Interrupt::DMA2_Stream6),
            #[cfg(feature = "dma2")]
            70 => Ok(Interrupt::DMA2_Stream7),
            #[cfg(feature = "usart6")]
            71 => Ok(Interrupt::USART6),
            #[cfg(feature = "i2c3")]
            72 => Ok(Interrupt::I2C3_EV),
            #[cfg(feature = "i2c3")]
            73 => Ok(Interrupt::I2C3_ER),
            #[cfg(feature = "otg_hs_global")]
            74 => Ok(Interrupt::OTG_HS_EP1_OUT),
            #[cfg(feature = "otg_hs_global")]
            75 => Ok(Interrupt::OTG_HS_EP1_IN),
            #[cfg(feature = "otg_hs_global")]
            76 => Ok(Interrupt::OTG_HS_WKUP),
            #[cfg(feature = "otg_hs_global")]
            77 => Ok(Interrupt::OTG_HS),
            #[cfg(feature = "dcmi")]
            78 => Ok(Interrupt::DCMI),
            #[cfg(feature = "cryp")]
            79 => Ok(Interrupt::CRYP),
            #[cfg(feature = "hash")]
            80 => Ok(Interrupt::HASH_RNG),
            #[cfg(feature = "fpu")]
            81 => Ok(Interrupt::FPU),
            #[cfg(feature = "ltdc")]
            88 => Ok(Interrupt::LCD_TFT),
            #[cfg(feature = "ltdc")]
            89 => Ok(Interrupt::LCD_TFT_1),
            _ => Err(TryFromInterruptError(())),
        }
    }
}
