# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

from enum import Enum

class Mips64Register(Enum):
    R0 = ...
    R1 = ...
    R2 = ...
    R3 = ...
    R4 = ...
    R5 = ...
    R6 = ...
    R7 = ...
    R8 = ...
    R9 = ...
    R10 = ...
    R11 = ...
    R12 = ...
    R13 = ...
    R14 = ...
    R15 = ...
    R16 = ...
    R17 = ...
    R18 = ...
    R19 = ...
    R20 = ...
    R21 = ...
    R22 = ...
    R23 = ...
    R24 = ...
    R25 = ...
    R26 = ...
    R27 = ...
    R28 = ...
    R29 = ...
    R30 = ...
    R31 = ...
    Hi = ...
    Lo = ...
    Pc = ...
    F0 = ...
    F1 = ...
    F2 = ...
    F3 = ...
    F4 = ...
    F5 = ...
    F6 = ...
    F7 = ...
    F8 = ...
    F9 = ...
    F10 = ...
    F11 = ...
    F12 = ...
    F13 = ...
    F14 = ...
    F15 = ...
    F16 = ...
    F17 = ...
    F18 = ...
    F19 = ...
    F20 = ...
    F21 = ...
    F22 = ...
    F23 = ...
    F24 = ...
    F25 = ...
    F26 = ...
    F27 = ...
    F28 = ...
    F29 = ...
    F30 = ...
    F31 = ...
    Fir = ...
    Fccr = ...
    Fexr = ...
    Fenr = ...
    Fcsr = ...
    Ac0 = ...
    Ac1 = ...
    Ac2 = ...
    Ac3 = ...
    Hi0 = ...
    Hi1 = ...
    Hi2 = ...
    Hi3 = ...
    Lo0 = ...
    Lo1 = ...
    Lo2 = ...
    Lo3 = ...
    DSPControl = ...
    r"""
    DSP Control Register
    """
    Mpl0 = ...
    r"""
    (cnMIPS) Multiplier 0
    """
    Mpl1 = ...
    r"""
    (cnMIPS) Multiplier 1
    """
    Mpl2 = ...
    r"""
    (cnMIPS) Multiplier 2
    """
    P0 = ...
    r"""
    (cnMIPS) Product 0
    """
    P1 = ...
    r"""
    (cnMIPS) Product 1
    """
    P2 = ...
    r"""
    (cnMIPS) Product 2
    """
    CrcIV = ...
    r"""
    (cnMIPS) CRC32 IV
    """
    CrcPoly = ...
    r"""
    (cnMIPS) CRC32 Polynomial
    """
    CrcLen = ...
    r"""
    (cnMIPS) CRC32 Length (Number of bytes to add)
    """
    GfmMul = ...
    r"""
    (cnMIPS) GFM Multiplier
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    GfmResInp = ...
    r"""
    (cnMIPS) GFM Result/Input
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    GfmPoly = ...
    r"""
    (cnMIPS) GFM Polynomial
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    HashDat = ...
    r"""
    (cnMIPS) Hash Input Data
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    HashIV = ...
    r"""
    (cnMIPS) Hash IV
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    ThreeDESKey = ...
    r"""
    (cnMIPS) 3DES Key
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    ThreeDESIV = ...
    r"""
    (cnMIPS) 3DES IV
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    ThreeDESResult = ...
    r"""
    (cnMIPS) 3DES Result
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    AesKey = ...
    r"""
    (cnMIPS) AES Key
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    AesKeyLen = ...
    r"""
    (cnMIPS) AES Key Length Indicator
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    AesIV = ...
    r"""
    (cnMIPS) AES IV
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    AesResInp = ...
    r"""
    (cnMIPS) AES Result/Input
    (Not Present in non crypto cnMIPS variants `-SP` instead of `-SSP`)
    """
    CvmsegLm = ...
    r"""
    (cnMIPS) Local Scratchpad Memory
    """

class Mips64Variant(Enum):
    Mips6420kc = ...
    Mips645kc = ...
    Mips645kec = ...
    Mips645kef = ...
    Mips645kf = ...
    Mips64Cn5520 = ...
    Mips64Cn5530 = ...
    Mips64Cn5534 = ...
    Mips64Cn5640 = ...
    Mips64Cn5645 = ...
    Mips64Cn5650 = ...
    Mips64Cn5740 = ...
    Mips64Cn5745 = ...
    Mips64Cn5750 = ...
    Mips64Cn5830 = ...
    Mips64Cn5840 = ...
    Mips64Cn5850 = ...
    Mips64Cn5860 = ...
    Mips64Cn6320 = ...
    Mips64Cn6330 = ...
    Mips64Cn6350 = ...
    Mips64Cn6860 = ...
    Mips64Cn6870 = ...
    Mips64Cn6880 = ...
    Mips64DspR2 = ...
    Mips64I6400 = ...
    Mips64I6500 = ...
    Mips64Loongson2e = ...
    Mips64Loongson2f = ...
    Mips64P6600 = ...
    Mips64R2Generic = ...
    Mips64R4000 = ...
    Mips64Vrf5432 = ...
