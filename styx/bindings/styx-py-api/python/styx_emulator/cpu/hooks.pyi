# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import typing

class BlockDataHook:
    def __new__(cls, callback:typing.Any, userdata:typing.Any) -> BlockDataHook: ...

class BlockHook:
    def __new__(cls, callback:typing.Any) -> BlockHook: ...

class CodeDataHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any, userdata:typing.Any) -> CodeDataHook: ...

class CodeHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any) -> CodeHook: ...

class HookToken:
    ...

class InterruptDataHook:
    def __new__(cls, callback:typing.Any, userdata:typing.Any) -> InterruptDataHook: ...

class InterruptHook:
    def __new__(cls, callback:typing.Any) -> InterruptHook: ...

class InvalidInstructionDataHook:
    def __new__(cls, callback:typing.Any, userdata:typing.Any) -> InvalidInstructionDataHook: ...

class InvalidInstructionHook:
    def __new__(cls, callback:typing.Any) -> InvalidInstructionHook: ...

class MemoryReadDataHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any, userdata:typing.Any) -> MemoryReadDataHook: ...

class MemoryReadHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any) -> MemoryReadHook: ...

class MemoryWriteDataHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any, userdata:typing.Any) -> MemoryWriteDataHook: ...

class MemoryWriteHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any) -> MemoryWriteHook: ...

class ProtectionFaultDataHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any, userdata:typing.Any) -> ProtectionFaultDataHook: ...

class ProtectionFaultHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any) -> ProtectionFaultHook: ...

class UnmappedFaultDataHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any, userdata:typing.Any) -> UnmappedFaultDataHook: ...

class UnmappedFaultHook:
    def __new__(cls, start:builtins.int, end:builtins.int, callback:typing.Any) -> UnmappedFaultHook: ...
